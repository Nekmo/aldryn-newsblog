language: python

# Use container based infrastructure
sudo: false

env:
  global:
    # encrypted Sauce Labs sub-account user name
    - secure: RGXS2qmljsyLVGEifz9yvLwdg33KxPDeuwHx0QFmjSkQuJZP92Xxl36qr6rNel52L+39oya8BGD/ddB6RNI6R5TsoOvQGMlrVZmYy4d8EPA7J8u3+Mpp1zQGK1ACmcnVm+5h8dbHeWtZW/1SovnclUYem16KUmQf35l9G9tKc/I=
    # encrypted Sauce Labs sub-account token
    - secure: Lt1n+6a4hj7BuShOufWfiAF3aTC4B6xpHwwcbklVy+fdy4pkY3okXO9CFtWkOTBRrFrgc8R+PL9dZ6ObK3SE1w7LU3dur89uIvJ4RXQ1uROr40PXAxD8RO+/2wp7nhh6CmG7GEKpuKt5QHbgdFVrJtmyoPp4vco1pU86njtEico=
    # encrypted Code Climate token
    - secure: Jq2JBTBMYLpnrwk6uuAWGOX4y+TEVkBuwSZywSrlKb9sW77DloxRfGXH81Q9juvaAy4KqtcGY6HE5vqJSo77MS/cmbtmZe4ypPKgVFy2YDDUGdLi65vEjkerjAmtS7bYBVur+fWG0mpYAmnfj06d0MgkBgwgCr4yLbJFtW8ElAM=
  matrix:
    # Matrix-size reduction strategies:
    #   PY strategy: do not test 3.3 at all.
    #   DB stragegy: we use raw queries, so good coverage is required. Test on
    #                each django/cms combination.
    #   FE strategy: only test on Django/CMS3.2 combinations, but place tests on
    #                different Python ENVs if possible. Also, test against all
    #                DB backends
    - TOXENV=flake8
    # Sqlite main test envs
    - TOXENV=py34-dj19-sqlite-cms32
    - TOXENV=py34-dj18-sqlite-cms31
    - TOXENV=py34-dj17-sqlite-cms32
    # MySQL database backend
    - TOXENV=py34-dj19-mysql-cms32
    - TOXENV=py34-dj18-mysql-cms32
    - TOXENV=py34-dj17-mysql-cms32
    - TOXENV=py27-dj17-mysql-cms32
    # - TOXENV=py26-dj16-oldmysql-cms32
    # PostgreSQL database backend
    - TOXENV=py34-dj19-postgres-cms32
    - TOXENV=py34-dj18-postgres-cms32
    - TOXENV=py34-dj17-postgres-cms32
    - TOXENV=py27-dj17-postgres-cms32
    - TOXENV=py26-dj16-postgres-cms32
    # Sqlite other test envs
    - TOXENV=py34-dj17-sqlite-cms31
    - TOXENV=py34-dj17-sqlite-cms30
    - TOXENV=py27-dj19-sqlite-cms32
    - TOXENV=py27-dj18-sqlite-cms32
    - TOXENV=py27-dj18-sqlite-cms31
    - TOXENV=py27-dj17-sqlite-cms31
    - TOXENV=py27-dj17-sqlite-cms30
    - TOXENV=py27-dj16-sqlite-cms32
    - TOXENV=py27-dj16-sqlite-cms31
    - TOXENV=py27-dj16-sqlite-cms30
    - TOXENV=py26-dj16-sqlite-cms31
    - TOXENV=py26-dj16-sqlite-cms30
    # Frontend integrration tests
    - FRONTEND=1 TOXENV=py34-dj19-sqlite-cms32-fe
    - FRONTEND=1 TOXENV=py34-dj18-sqlite-cms32-fe
    - FRONTEND=1 TOXENV=py27-dj17-sqlite-cms32-fe
    - FRONTEND=1 TOXENV=py26-dj16-sqlite-cms32-fe

cache:
  directories:
    - $HOME/.wheelhouse

services:
  - mysql
  - postgresql

before_install:
  # install tools for frontend integration tests.
  - if [ "$FRONTEND" == 1 ]; then npm install -g npm; fi

install:
  - pip install tox
  - pip install coveralls

before_script:
  # Prepare appropriate DB backend
  - sh -c "if [ '$DB_BACKEND' = 'POSTGRES' ];
    then psql -c 'DROP DATABASE IF EXISTS test;' -U postgres; fi"
  - sh -c "if [ '$DB_BACKEND' = 'MYSQL' ];
    then mysql -e 'create database IF NOT EXISTS test CHARACTER SET utf8 COLLATE utf8_general_ci;'; fi"
  # install tools for frontend integration tests.
  - if [ "$FRONTEND" == 1 ]; then npm install -g gulp; npm install -g codeclimate-test-reporter;  npm install; fi

after_script:
  - codeclimate < tests/coverage/**/lcov.info

script:
  - tox -e $TOXENV

after_success: coveralls

notifications:
  webhooks: http://addons.us-iad-rs.aldryn.io/en/travis-endpoint/
